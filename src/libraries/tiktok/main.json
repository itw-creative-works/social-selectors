/*
  https://www.instagram.com/cats_of_instagram/
  https://www.instagram.com/cats.all.day/

  https://www.instagram.com/p/B99fX3uFZFX/


*/
{
  "global": {
    // Indicators
    "isOnPage": {
      "url": "/tiktok\\.com/",
    },
    "isEnglish": {
      "object": { "selector": "html[lang*='en']", "wait": 15000 },
    },
    /* "isOnMainSite": {
      "selector": "img[alt='Instagram']",
    }, */
    "isLoggedOut": {
      "selector": "",
      /* "object": { "selector": "nav a, main article button", "filters": [ {"match": { "innerText": "/Log In|Sign Up|Continue as/i" }} ] }, */
      "object": { "selector": ".login-button" },
    },
    "loginButton": {
      "object": "$get(global.isLoggedOut.object)",
    },
    "profilePicture": {
      "selector": ".menu-right .tiktok-avatar",
    },
    "sessionMetaData": {
      "selector": "#__NEXT_DATA__",
    },
    "isPopupOpen": {
      "selector": "div[role='dialog']"
    },
    "isCaptchaOpen": {
      "selector": "#tiktok-verify-ele:not([style*='display: none'])"
    },
    // Actions
    "searchBar": {
      "selector": "input[name='q']",
    },
    "searchBar_dropdown": {
      "selector": ".search-container .sug-container",
    },
    "notificationsReminder_disable": {
      "object": { "selector": "button", "filters": [ {"match": { "innerText": "/Not Now/i" }} ] },
    },
    /* "viewEngagementPopup_profileLink": {
      "selector(array)": "div[role='presentation'] img",
    }, */
    // Explore
    "postLink": {
      "selector(array)": "a[href*='/p/'] > div div:nth-child(2)",
    },
  },
  "home": {
    // Indicators
    "isOnPage": {
      "url": "/instagram.com($|\\/$|\\?|\\/\\?|\\#|\\/\\#)/",
    },
    // Actions
    "continueAsButton": {
      "object": { "selector": "button", "filters": [ {"match": { "innerText": "/Continue as/i" }} ] },
    },
  },
  "search": {
    // Indicators
    "isOnPage": {
      "url": "/instagram\\.com\\/explore/",
    },
    // Actions
    "profileLink": {
      "selector(array)": ".search a[href*='/@']"
    }
  },
  "profile": {
    // Indicators
    // Good for testing loaded
    "isOnPage": {
      "selector": ".share-layout-main",
    },
    "isPrivate": {
      "object": {"selector": "_NOEXIST" },
    },
    // Actions
    "followButton": {
      "object": {"selector": ".share-info button.follow-button:not(.hide)" },
    },
    // Stats
    "followerCount": {
      "object": {"selector": ".count-infos strong[title*='Follower']" },
    },
    "followingCount": {
      "object": {"selector": ".count-infos strong[title*='Following']" },
    },
    "likeCount": {
      "object": {"selector": ".count-infos strong[title*='Like']" },
    },
    // Explore
    "viewFollowersButton": {
      "object": "$get(profile.followerCount.object)",
    },
    "viewFollowingButton": {
      "object": "$get(profile.followingCount.object)",
    },
    "postLink": {
      "selector(array)": ".video-feed video"
    },
    "suggestedProfileLink": {
      "selector(array)": ".user-list a[href*='/@'][style*=block]"
    }

  },
  "profile_followers": {
    // Indicators
    "isOnPage": {
      "url": "/\\/followers/",
    },
    "isEmpty": {
      "selector": "",
    },
    // Explore
    "profileLink": { // Good for testing loaded
      "selector(array)": "div[role='presentation'] a.notranslate",
    },
  },
  "profile_following": {
    // Indicators
    "isOnPage": {
      "url": "/\\/following/",
    },
    "isEmpty": {
      "selector": "",
    },
    // Explore
    "profileLink": {
      "selector(array)": "$get(profile_followers.profileLink.selector(array))",
    },
  },
  "post": {
    // Indicators
    "isOnPage": {
      "url": "(instagram.com\\/p\\/.*?)($|\\/$|\\/|\\?|\\/\\?|\\#|\\/\\#)",
      "selector": ".user-info-container",
    },
    "isLiked": {
      "selector": ".action-container .icons.like.liked",
    },
    // Actions
    "followButton": {
      "object": {"selector": ".user-info-container button.follow-button", "filters": [ {"match": { "innerText": "/Follow$/i" }} ] },
    },
    "likeButton": {
      "selector": ".action-container .icons.like:not(.liked)",
    },
    "commentLikeButton": {
      "object": {"selector": ".comment-container .like-container img[src*='unlike']"}
    },


    // Stats
    "likeCount": {
      "object": {"selector": ".video-infos-container .like-text" },
    },
    "commentCount": {
      "object": {"selector": ".video-infos-container .comment-text" },
    },
    "postDate": {
      "object": {"selector": "_NOEXIST" },
    },

    "commentButton": {
      "selector": ".DraftEditor-root"
    },
    "commentList": {
      "selector": "article"
    },

    // Explore
    "commentContainer": {
      "object": {"selector": ".comment-container"}
    },
    "commentProfileLink": {
      "object": {"selector": ".comment-container .comment-item a[href*='/@']"}
    },
    "viewLikesButton": {
      "object": "$get(post.likeCount.object)",
    },

  },
  "post_likes": {
    "isOnPage": {
      "selector(array)": "div[role='presentation'] a > div",
    },
    "profileLink": {
      "selector(array)": "$get(post_likes.isOnPage.selector(array))",
    },
  },
  "login": {
    "isOnPage": {
      "object": {"selector": "main p button", "filters": [ {"match": { "innerText": "/Sign Up$/i" }} ]},
    }
  },
  "error": {
    // Indicators
    "spamWarning": {
      "selector": ".spamWarning",
    },
    "timeout": {
      "object": {"selector": "body", "filters": [ {"match": { "innerText": "/wait a few minutes/i" }} ] },
    }
  }


}
